resources:
  - name: cloudrail_demo_repo
    type: GitRepo
    configuration:
      gitProvider: github
      path: indeni/cloudrail-demo

  - name: terraform_img
    type: Image
    configuration:
      registry: docker
      imageName: hashicorp/terraform
      imageTag: 0.13.5
      autoPull: true


  - name: cloudrail_img
    type: Image
    configuration:
      registry: docker
      imageName: indeni/cloudrail-cli
      imageTag: latest
      autoPull: true

pipelines:
  - name: terraform_and_cloudrail_example
    steps:
      - name: tf_init_and_plan
        type: Bash
        configuration:
          inputResources:
            - name: cloudrail_demo_repo
          integrations:
            - name: aws_cloudrail_dev
        execution:
          onExecute:
            - docker pull hashicorp/terraform:0.13.5
            - docker run -v $PWD/dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role:/data  
              -w /data hashicorp/terraform:0.13.5 
              init 
            - docker run -v $PWD/dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role:/data  
              -e AWS_ACCESS_KEY_ID=$int_aws_cloudrail_dev_accessKeyId 
              -e AWS_SECRET_ACCESS_KEY=$int_aws_cloudrail_dev_secretAccessKey 
              -w /data hashicorp/terraform:0.13.5 
              plan -out=plan.out
          onComplete:
            - add_run_files dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role/plan.out planfile
            - add_run_files dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role/.terraform tfdir


      - name: cloudrail_run
        type: Bash
        configuration:
          inputResources:
            - name: cloudrail_demo_repo
          inputSteps:
            - name: tf_init_and_plan
          integrations:
            - name: cloudrail_credentials
        execution:
          onStart:
            - restore_run_files planfile dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role/plan.out
            - restore_run_files tfdir dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role/.terraform
          onExecute:
            - docker pull indeni/cloudrail-cli
            - docker run 
              --user root 
              -v $PWD/dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role:/data 
              -w /data indeni/cloudrail-cli 
              run -p plan.out -d . --auto-approve -v 
              --api-key $int_cloudrail_credentials_cloudrail_api_key
              --output-file cloudrail_results.xml --output-format junit
              --origin ci
              --build-link "$step_url"
              --execution-source-identifier "$pipeline_name - $run_id"
              --cloud-account-id $AWS_ACCOUNT_ID
          onComplete:
            - save_tests dependencyState/resources/cloudrail_demo_repo/test/aws/terraform/ec2_role_share_rule/public_and_private_ec2_same_role/cloudrail_results.xml

