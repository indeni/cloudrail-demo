
       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By bridgecrew.io | version: 1.0.684 

terraform scan results:

Passed checks: 5, Failed checks: 8, Skipped checks: 0

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.db
	File: /main.tf:103-111
	Guide: https://docs.bridgecrew.io/docs/networking_31

		103 | resource "aws_security_group" "db" {
		104 |   vpc_id = aws_vpc.nondefault.id
		105 |   ingress {
		106 |     from_port = 3306
		107 |     protocol = "tcp"
		108 |     to_port = 3306
		109 |     cidr_blocks = [aws_subnet.nondefault_1.cidr_block]
		110 |   }
		111 | }


Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.test
	File: /main.tf:113-126
	Guide: https://docs.bridgecrew.io/docs/general_4

		113 | resource "aws_db_instance" "test" {
		114 |   identifier = "tf-test-db"
		115 |   allocated_storage = "5"
		116 |   multi_az = "false"
		117 |   engine = "mysql"
		118 |   instance_class = "db.t2.small"
		119 |   username = "admin"
		120 |   password = "password123"
		121 |   db_subnet_group_name = aws_db_subnet_group.db.name
		122 |   vpc_security_group_ids = [ aws_security_group.db.id]
		123 |   storage_type = "gp2"
		124 |   skip_final_snapshot = true
		125 |   publicly_accessible = false
		126 | }


Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	FAILED for resource: aws_security_group.publicly_accessible_sg
	File: /main.tf:129-143
	Guide: https://docs.bridgecrew.io/docs/networking_2

		129 | resource "aws_security_group" "publicly_accessible_sg" {
		130 |   vpc_id = aws_vpc.nondefault.id
		131 |   ingress {
		132 |     from_port = 0
		133 |     protocol = "tcp"
		134 |     to_port = 65000
		135 |     cidr_blocks = ["0.0.0.0/0"]
		136 |   }
		137 |   egress {
		138 |     from_port = 0
		139 |     protocol = "tcp"
		140 |     to_port = 65000
		141 |     cidr_blocks = ["0.0.0.0/0"]
		142 |   }
		143 | }


Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.publicly_accessible_sg
	File: /main.tf:129-143
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

		129 | resource "aws_security_group" "publicly_accessible_sg" {
		130 |   vpc_id = aws_vpc.nondefault.id
		131 |   ingress {
		132 |     from_port = 0
		133 |     protocol = "tcp"
		134 |     to_port = 65000
		135 |     cidr_blocks = ["0.0.0.0/0"]
		136 |   }
		137 |   egress {
		138 |     from_port = 0
		139 |     protocol = "tcp"
		140 |     to_port = 65000
		141 |     cidr_blocks = ["0.0.0.0/0"]
		142 |   }
		143 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.publicly_accessible_sg
	File: /main.tf:129-143
	Guide: https://docs.bridgecrew.io/docs/networking_31

		129 | resource "aws_security_group" "publicly_accessible_sg" {
		130 |   vpc_id = aws_vpc.nondefault.id
		131 |   ingress {
		132 |     from_port = 0
		133 |     protocol = "tcp"
		134 |     to_port = 65000
		135 |     cidr_blocks = ["0.0.0.0/0"]
		136 |   }
		137 |   egress {
		138 |     from_port = 0
		139 |     protocol = "tcp"
		140 |     to_port = 65000
		141 |     cidr_blocks = ["0.0.0.0/0"]
		142 |   }
		143 | }


Check: CKV_AWS_88: "EC2 instance should not have public IP."
	FAILED for resource: aws_instance.public_ins
	File: /main.tf:146-152
	Guide: https://docs.bridgecrew.io/docs/public_12

		146 | resource "aws_instance" "public_ins" {
		147 |   ami = "ami-0130bec6e5047f596"
		148 |   instance_type = "t3.nano"
		149 |   associate_public_ip_address = true
		150 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
		151 |   subnet_id = aws_subnet.nondefault_1.id
		152 | }

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration EBS is securely encrypted"
	FAILED for resource: aws_instance.public_ins
	File: /main.tf:146-152
	Guide: https://docs.bridgecrew.io/docs/general_13

		146 | resource "aws_instance" "public_ins" {
		147 |   ami = "ami-0130bec6e5047f596"
		148 |   instance_type = "t3.nano"
		149 |   associate_public_ip_address = true
		150 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
		151 |   subnet_id = aws_subnet.nondefault_1.id
		152 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.public_ins
	File: /main.tf:146-152
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		146 | resource "aws_instance" "public_ins" {
		147 |   ami = "ami-0130bec6e5047f596"
		148 |   instance_type = "t3.nano"
		149 |   associate_public_ip_address = true
		150 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
		151 |   subnet_id = aws_subnet.nondefault_1.id
		152 | }


