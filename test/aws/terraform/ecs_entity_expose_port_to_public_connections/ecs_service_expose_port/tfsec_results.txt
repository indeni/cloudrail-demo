
Check 1

  [AWS049][WARNING] Resource 'aws_network_acl_rule.inbound-rule' defines a Network ACL rule that allows specific ingress ports from anywhere.
  /Users/yoni/code/cloudrail-demo/test/aws/terraform/ecs_entity_expose_port_to_public_connections/ecs_service_expose_port/main.tf:32

      29 |   egress         = false
      30 |   protocol       = "tcp"
      31 |   rule_action    = "allow"
      32 |   cidr_block     = "0.0.0.0/0"
      33 |   from_port      = local.web_server_port
      34 |   to_port        = local.mysql_port
      35 | }

   See https://tfsec.dev/docs/aws/AWS049/ for more information. 

Check 2

  [AWS008][WARNING] Resource 'aws_security_group.sg' defines a fully open ingress security group.
  /Users/yoni/code/cloudrail-demo/test/aws/terraform/ecs_entity_expose_port_to_public_connections/ecs_service_expose_port/main.tf:77

      74 |     from_port   = local.web_server_port
      75 |     to_port     = local.mysql_port
      76 |     protocol    = "tcp"
      77 |     cidr_blocks = ["0.0.0.0/0"]
      78 |   }
      79 | 
      80 |   egress {

   See https://tfsec.dev/docs/aws/AWS008/ for more information. 

Check 3

  [AWS009][WARNING] Resource 'aws_security_group.sg' defines a fully open egress security group.
  /Users/yoni/code/cloudrail-demo/test/aws/terraform/ecs_entity_expose_port_to_public_connections/ecs_service_expose_port/main.tf:84

      81 |     from_port   = 0
      82 |     to_port     = 0
      83 |     protocol    = "-1"
      84 |     cidr_blocks = ["0.0.0.0/0"]
      85 |   }
      86 | 
      87 | }

   See https://tfsec.dev/docs/aws/AWS009/ for more information. 

Check 4

  [AWS018][ERROR] Resource 'aws_security_group.sg' should include a description for auditing purposes.
  /Users/yoni/code/cloudrail-demo/test/aws/terraform/ecs_entity_expose_port_to_public_connections/ecs_service_expose_port/main.tf:68-87

      65 | }
      66 | 
      67 | 
      68 | resource "aws_security_group" "sg" {
      69 |   name   = "sg"
      70 |   vpc_id = aws_vpc.main-vpc.id
      71 | 
      72 |   ingress {
      73 |     description = "mysql"
      74 |     from_port   = local.web_server_port
      75 |     to_port     = local.mysql_port
      76 |     protocol    = "tcp"
      77 |     cidr_blocks = ["0.0.0.0/0"]
      78 |   }
      79 | 
      80 |   egress {
      81 |     from_port   = 0
      82 |     to_port     = 0
      83 |     protocol    = "-1"
      84 |     cidr_blocks = ["0.0.0.0/0"]
      85 |   }
      86 | 
      87 | }
      88 | 
      89 | resource "aws_ecs_cluster" "ecs-cluster" {
      90 |   name = "ecs-cluster"

   See https://tfsec.dev/docs/aws/AWS018/ for more information. 

  times
  ------------------------------------------
  disk i/o             958.208µs
  parsing HCL          4.5µs
  evaluating values    159.958µs
  running checks       522.292µs

  counts
  ------------------------------------------
  files loaded         1
  blocks               15
  evaluated blocks     15
  modules              0
  module blocks        0
  ignored checks       0

4 potential problems detected.

